{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program Files\\\\Microsoft VS Code\\\\workspace\\\\React_NodeBird\\\\frontend\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport AppLayout from '../components/AppLayout';\nimport { Provider } from 'react-redux';\nimport reducer from '../reducers';\nimport withRedux from 'next-redux-wrapper';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\n\nvar NodeBird = function NodeBird(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store;\n  return __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"NodeBird\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), __jsx(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(Component, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })));\n};\n\nNodeBird.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired\n};\n\nvar configureStore = function configureStore(initialState, options) {\n  // 여기에다가 store 커스터마이징\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware]; // 배포할 때에는 devtools를 사용하지 않아야 하기 때문에 env.NODE_ENV를 통해 배포용인지 확인\n\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : compose(applyMiddleware.apply(void 0, middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  });\n  var store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(NodeBird);","map":{"version":3,"sources":["D:/Program Files/Microsoft VS Code/workspace/React_NodeBird/frontend/pages/_app.js"],"names":["React","Head","PropTypes","AppLayout","Provider","reducer","withRedux","createStore","compose","applyMiddleware","createSagaMiddleware","rootSaga","NodeBird","Component","store","propTypes","elementType","isRequired","object","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f","run"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AAEA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA0B;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACvC,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAIA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,6DAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADJ;AAWH,CAZD;;AAcAF,QAAQ,CAACG,SAAT,GAAqB;AACjBF,EAAAA,SAAS,EAAGX,SAAS,CAACc,WAAV,CAAsBC,UADjB;AAEjBH,EAAAA,KAAK,EAAEZ,SAAS,CAACgB,MAAV,CAAiBD;AAFP,CAArB;;AAKA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,YAAD,EAAeC,OAAf,EAA2B;AAC9C;AACA,MAAMC,cAAc,GAAGZ,oBAAoB,EAA3C;AACA,MAAMa,WAAW,GAAG,CAACD,cAAD,CAApB,CAH8C,CAK9C;;AACA,MAAME,QAAQ,GAAG,QACfhB,OAAO,CAACC,eAAe,MAAf,SAAmBc,WAAnB,CAAD,CADQ,GAEff,OAAO,CACPC,eAAe,MAAf,SAAmBc,WAAnB,CADO,EAEP,CAACF,OAAO,CAACI,QAAT,IAAqB,OAAOC,MAAM,CAACC,4BAAd,KAA+C,WAApE,GAAkFD,MAAM,CAACC,4BAAP,EAAlF,GAA0H,UAAAC,CAAC;AAAA,WAAIA,CAAJ;AAAA,GAFpH,CAFT;AAOA,MAAMd,KAAK,GAAGP,WAAW,CAACF,OAAD,EAAUe,YAAV,EAAwBI,QAAxB,CAAzB;AACAF,EAAAA,cAAc,CAACO,GAAf,CAAmBlB,QAAnB;AACA,SAAOG,KAAP;AACH,CAhBD;;AAkBA,eAAeR,SAAS,CAACa,cAAD,CAAT,CAA0BP,QAA1B,CAAf","sourcesContent":["import React from 'react';\r\nimport Head from 'next/head';\r\nimport PropTypes from 'prop-types';\r\nimport AppLayout from '../components/AppLayout'\r\n\r\nimport { Provider } from 'react-redux';\r\nimport reducer from '../reducers';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\n\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\n\r\nconst NodeBird = ({ Component, store }) => {\r\n    return(\r\n        <Provider store = {store}>\r\n            <Head>\r\n                <title>NodeBird</title>\r\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\"/>\r\n            </Head>\r\n            <AppLayout>\r\n                <Component/>\r\n            </AppLayout>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nNodeBird.propTypes = {\r\n    Component : PropTypes.elementType.isRequired,\r\n    store: PropTypes.object.isRequired,\r\n}\r\n\r\nconst configureStore = (initialState, options) => {\r\n    // 여기에다가 store 커스터마이징\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware];\r\n\r\n    // 배포할 때에는 devtools를 사용하지 않아야 하기 때문에 env.NODE_ENV를 통해 배포용인지 확인\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : compose(\r\n      applyMiddleware(...middlewares),\r\n      !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\r\n    );\r\n\r\n    const store = createStore(reducer, initialState, enhancer);\r\n    sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\n\r\nexport default withRedux(configureStore)(NodeBird);"]},"metadata":{},"sourceType":"module"}