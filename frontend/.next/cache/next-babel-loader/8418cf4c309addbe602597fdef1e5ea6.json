{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from '../reducers/post';\n\nfunction addPostAPI() {}\n\nfunction* addPost() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {} // 사가도 action에 대한걸 받을 수 있다. dispatch 할 때 action을 보냈을 때 받는다...\n\n\nfunction* addComment(action) {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["D:/Program Files/Microsoft VS Code/workspace/React_NodeBird/frontend/sagas/post.js"],"names":["all","delay","fork","put","takeLatest","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","addPostAPI","addPost","type","e","error","watchAddPost","addCommentAPI","addComment","action","data","postId","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,oBAAlD;AACA,SACIC,mBADJ,EAEIC,mBAFJ,EAGIC,mBAHJ,EAIIC,gBAJJ,EAKIC,gBALJ,EAMIC,gBANJ,QAOO,kBAPP;;AASA,SAASC,UAAT,GAAsB,CAErB;;AAED,UAAUC,OAAV,GAAoB;AAClB,MAAI;AACF,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEH;AADE,KAAD,CAAT;AAGD,GALD,CAKE,OAAOI,CAAP,EAAU;AACV,UAAMX,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEL,gBADE;AAERO,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUE,YAAV,GAAyB;AACvB,QAAMZ,UAAU,CAACK,gBAAD,EAAmBG,OAAnB,CAAhB;AACD;;AAED,SAASK,aAAT,GAAyB,CAExB,C,CAED;;;AACA,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMlB,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEN,mBADE;AAERa,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEF,MAAM,CAACC,IAAP,CAAYC;AADhB;AAFE,KAAD,CAAT;AAMD,GARD,CAQE,OAAOP,CAAP,EAAU;AACV,UAAMX,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAER,mBADE;AAERU,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUQ,eAAV,GAA4B;AAC1B,QAAMlB,UAAU,CAACE,mBAAD,EAAsBY,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUK,QAAV,GAAqB;AAClC,QAAMvB,GAAG,CAAC,CACRE,IAAI,CAACc,YAAD,CADI,EAERd,IAAI,CAACoB,eAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    ADD_COMMENT_FAILURE,\r\n    ADD_COMMENT_REQUEST,\r\n    ADD_COMMENT_SUCCESS,\r\n    ADD_POST_FAILURE,\r\n    ADD_POST_REQUEST,\r\n    ADD_POST_SUCCESS,\r\n} from '../reducers/post';\r\n\r\nfunction addPostAPI() {\r\n\r\n}\r\n\r\nfunction* addPost() {\r\n  try {\r\n    yield delay(2000);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction addCommentAPI() {\r\n\r\n}\r\n\r\n// 사가도 action에 대한걸 받을 수 있다. dispatch 할 때 action을 보냈을 때 받는다...\r\nfunction* addComment(action) {\r\n  try {\r\n    yield delay(2000);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: {\r\n        postId: action.data.postId,\r\n      },\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}