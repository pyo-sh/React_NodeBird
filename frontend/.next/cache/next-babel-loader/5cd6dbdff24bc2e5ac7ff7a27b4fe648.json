{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  isLoggedIn: false,\n  // 로그인 여부\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isLoggingIn: false,\n  // 로그인 시도중\n  logInErrorReason: '',\n  // 로그인 실패 사유\n  isSignedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: '',\n  // 회원가입 실패 사유\n  me: null,\n  // 내 정보\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null // 남의 정보\n\n};\nvar dummyUser = {\n  nickname: '표서쿤',\n  Post: [],\n  Followings: [],\n  Followers: [],\n  id: 1\n};\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var SIGN_UP_REQUEST = 'LOG_OUT_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'LOG_OUT_FAILURE'; // 로그인 했을 때 유저의 역할을 load 하기 위함\n\nexport var LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport var LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport var LOAD_USER_FAILURE = 'LOAD_USER_FAILURE'; // 팔로워, 팔로잉 불러오기\n\nexport var LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\nexport var LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\nexport var LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE'; // 유저를 팔로윙하는 역할\n\nexport var FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\nexport var FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport var FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE'; // 유저를 언팔로잉 하는 역할\n\nexport var UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\nexport var UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\nexport var UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE'; // 내 팔로워 이상한 사람 없애는 액션\n\nexport var REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport var REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport var REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE'; // 리듀서의 단점때문에 만들어낸 액션이라고 합니다..\n\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport var loginAction = {\n  type: LOG_IN_REQUEST\n};\nexport var logoutAction = {\n  type: LOG_OUT_REQUEST\n};\nexport var signUpAction = function signUpAction(data) {\n  return {\n    type: SIGN_UP_REQUEST,\n    data: data\n  };\n};\nexport var signUpSuccessAction = function signUpSuccessAction(data) {\n  return {\n    type: SIGN_UP_SUCCESS\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          logInErrorReason: ''\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          isLoggedIn: true,\n          me: dummyUser,\n          isLoading: false\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          isLoggedIn: false,\n          logInErrorReason: action.error,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          isSignedUp: true\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          signUpErrorReason: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/Program Files/Microsoft VS Code/workspace/React_NodeBird/frontend/reducers/user.js"],"names":["initialState","isLoggedIn","isLoggingOut","isLoggingIn","logInErrorReason","isSignedUp","isSigningUp","signUpErrorReason","me","followingList","followerList","userInfo","dummyUser","nickname","Post","Followings","Followers","id","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_FOLLOW_REQUEST","LOAD_FOLLOW_SUCCESS","LOAD_FOLLOW_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","ADD_POST_TO_ME","loginAction","type","logoutAction","signUpAction","data","signUpSuccessAction","reducer","state","action","isLoading","error","user","signUpData"],"mappings":"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","sourcesContent":["export const initialState = {\r\n    isLoggedIn: false,      // 로그인 여부\r\n    isLoggingOut: false,    // 로그아웃 시도중\r\n    isLoggingIn: false,     // 로그인 시도중\r\n    logInErrorReason: '',   // 로그인 실패 사유\r\n    isSignedUp: false,      // 회원가입 성공\r\n    isSigningUp: false,     // 회원가입 시도중\r\n    signUpErrorReason: '',  // 회원가입 실패 사유\r\n    me: null,               // 내 정보\r\n    followingList: [],      // 팔로잉 리스트\r\n    followerList: [],       // 팔로워 리스트\r\n    userInfo: null,         // 남의 정보\r\n};\r\n\r\nconst dummyUser = {\r\n    nickname: '표서쿤',\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [],\r\n    id: 1,\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'LOG_OUT_FAILURE';\r\n// 로그인 했을 때 유저의 역할을 load 하기 위함\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n// 팔로워, 팔로잉 불러오기\r\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\r\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\r\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\r\n// 유저를 팔로윙하는 역할\r\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\r\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\r\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\r\n// 유저를 언팔로잉 하는 역할\r\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\r\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\r\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\r\n// 내 팔로워 이상한 사람 없애는 액션\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n// 리듀서의 단점때문에 만들어낸 액션이라고 합니다..\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\n\r\nexport const loginAction = {\r\n    type: LOG_IN_REQUEST,\r\n}\r\n\r\nexport const logoutAction = {\r\n    type: LOG_OUT_REQUEST,\r\n}\r\n\r\nexport const signUpAction = (data) => {\r\n    return {\r\n        type: SIGN_UP_REQUEST,\r\n        data: data,\r\n    }\r\n}\r\n\r\nexport const signUpSuccessAction = (data) => {\r\n    return {\r\n        type: SIGN_UP_SUCCESS,\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case LOG_IN_REQUEST: {\r\n            return{\r\n                ...state,\r\n                isLoggedIn: true,\r\n                logInErrorReason: '',\r\n            }\r\n        }\r\n        case LOG_IN_SUCCESS: {\r\n            return{\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isLoggedIn: true,\r\n                me: dummyUser,\r\n                isLoading: false,\r\n            }\r\n        }\r\n        case LOG_IN_FAILURE: {\r\n            return {\r\n              ...state,\r\n              isLoggingIn: false,\r\n              isLoggedIn: false,\r\n              logInErrorReason: action.error,\r\n              me: null,\r\n            };\r\n          }\r\n        case LOG_OUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null,\r\n            }\r\n        }\r\n        case SIGN_UP_REQUEST: {\r\n            return {\r\n                ...state,\r\n                signUpData: action.data,\r\n            }\r\n        }\r\n        case SIGN_UP_SUCCESS: {\r\n            return {\r\n              ...state,\r\n              isSigningUp: false,\r\n              isSignedUp: true,\r\n            };\r\n          }\r\n          case SIGN_UP_FAILURE: {\r\n            return {\r\n              ...state,\r\n              isSigningUp: false,\r\n              signUpErrorReason: action.error,\r\n            };\r\n          }\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}