{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const initialState = {\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: '표서쿤'\n    },\n    content: '첫 번째 게시글'\n  }],\n  imagePaths: [],\n  signUpData: {}\n};\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_DUMMY = 'ADD_DUMMY';\nexport const SIGN_UP = 'SIGN_UP';\nconst addPost = {\n  type: ADD_POST\n};\nconst addDummy = {\n  type: ADD_DUMMY,\n  data: {\n    content: 'Hello',\n    UserId: 1,\n    User: {\n      nickname: '표서쿤'\n    }\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n    case ADD_DUMMY:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: [action.data, ...state.mainPosts]\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/Program Files/Microsoft VS Code/workspace/React_NodeBird/frontend/reducers/post.js"],"names":["initialState","mainPosts","User","id","nickname","content","imagePaths","signUpData","ADD_POST","ADD_DUMMY","SIGN_UP","addPost","type","addDummy","data","UserId","reducer","state","action"],"mappings":";;;;;;;;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAE,CAAC;AACRC,IAAAA,IAAI,EAAE;AACFC,MAAAA,EAAE,EAAE,CADF;AAEFC,MAAAA,QAAQ,EAAE;AAFR,KADE;AAKRC,IAAAA,OAAO,EAAE;AALD,GAAD,CADa;AAQxBC,EAAAA,UAAU,EAAE,EARY;AASxBC,EAAAA,UAAU,EAAE;AATY,CAArB;AAYP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAEP,MAAMC,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAEJ;AADM,CAAhB;AAGA,MAAMK,QAAQ,GAAG;AACbD,EAAAA,IAAI,EAAEH,SADO;AAEbK,EAAAA,IAAI,EAAE;AACFT,IAAAA,OAAO,EAAE,OADP;AAEFU,IAAAA,MAAM,EAAE,CAFN;AAGFb,IAAAA,IAAI,EAAE;AACFE,MAAAA,QAAQ,EAAE;AADR;AAHJ;AAFO,CAAjB;;AAWA,MAAMY,OAAO,GAAG,CAACC,KAAK,GAAGjB,YAAT,EAAuBkB,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACN,IAAd;AACI,SAAKJ,QAAL;AACA,SAAKC,SAAL;AAAgB;AACZ,iCACOQ,KADP;AAEIhB,UAAAA,SAAS,EAAE,CAACiB,MAAM,CAACJ,IAAR,EAAc,GAAGG,KAAK,CAAChB,SAAvB;AAFf;AAIH;;AACD,SAAKS,OAAL;AAAc;AACV,iCACOO,KADP;AAEIV,UAAAA,UAAU,EAAEW,MAAM,CAACJ;AAFvB;AAIH;;AACD;AAAS;AACL,iCACOG,KADP;AAGH;AAlBL;AAoBH,CArBD;;AAuBA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    mainPosts: [{\r\n        User: {\r\n            id: 1,\r\n            nickname: '표서쿤',\r\n        },\r\n        content: '첫 번째 게시글',\r\n    }],\r\n    imagePaths: [],\r\n    signUpData: {},\r\n};\r\n\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_DUMMY = 'ADD_DUMMY';\r\nexport const SIGN_UP = 'SIGN_UP';\r\n\r\nconst addPost = {\r\n    type: ADD_POST,\r\n};\r\nconst addDummy = {\r\n    type: ADD_DUMMY,\r\n    data: {\r\n        content: 'Hello',\r\n        UserId: 1,\r\n        User: {\r\n            nickname: '표서쿤',\r\n        },\r\n    },\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_POST:\r\n        case ADD_DUMMY: {\r\n            return {\r\n                ...state,\r\n                mainPosts: [action.data, ...state.mainPosts],\r\n            }\r\n        }\r\n        case SIGN_UP: {\r\n            return {\r\n                ...state,\r\n                signUpData: action.data,\r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}