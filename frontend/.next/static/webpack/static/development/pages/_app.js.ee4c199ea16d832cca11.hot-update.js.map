{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.ee4c199ea16d832cca11.hot-update.js","sources":["webpack:///./components/LoginForm.js","webpack:///./components/UserProfile.js","webpack:///./pages/signup.js","webpack:///./reducers/user.js"],"sourcesContent":["import React, {useState, useCallback} from 'react';\r\nimport { Input, Button, Form } from 'antd';\r\nimport Link from 'next/link';\r\nimport { useInput } from '../pages/signup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOG_IN_REQUEST } from '../reducers/user';\r\n\r\nconst LoginForm = () => {\r\n    const [id, onChangeId] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n    const { isLoggingIn } = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmitForm = useCallback((e) => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: LOG_IN_REQUEST,\r\n            data: {\r\n                id: password,\r\n            },\r\n        });\r\n    }, [id, password]);\r\n\r\n\r\n    return(\r\n        <Form onSubmit={onSubmitForm} style={{padding:'10px'}}>\r\n            <div>\r\n                <label>아이디</label>\r\n                <br/>\r\n                <Input name=\"user-id\" value={id} onChange={onChangeId} required/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password\">비밀번호</label>\r\n                <br/>\r\n                <Input name=\"user-password\" type=\"password\" required value={password} onChange={onChangePassword}/>\r\n            </div>\r\n            <div style={{ marginTop: '10px' }}>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={isLoggingIn}>로그인</Button>\r\n                <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React, { useCallback } from 'react';\r\nimport { Card, Avatar, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LOG_OUT_REQUEST } from '../reducers/user';\r\n\r\nconst UserProfile = () => {\r\n    const { me } = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n    const onLogout = useCallback(()=>{\r\n        dispatch({\r\n            type: LOG_OUT_REQUEST,\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Card\r\n            actions={[\r\n                <div key=\"twit\">짹짹<br/>{me.Post.length}</div>,\r\n                <div key=\"following\">팔로잉<br/>{me.Followings.length}</div>,\r\n                <div key=\"follower\">팔로워<br/>{me.Followers.length}</div>,\r\n            ]}>\r\n            <Card.Meta\r\n                avatar={<Avatar>{me.nickname[0]}</Avatar>}\r\n                title={me.nickname}\r\n            />\r\n            <Button onClick={onLogout}>로그아웃</Button>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default UserProfile;","import React, { useState, useCallback } from 'react';\r\nimport { Form, Input, Checkbox, Button } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { SIGN_UP_REQUEST } from '../reducers/user';\r\n\r\nexport const useInput = (initValue = null) => {\r\n    const [value, setter] = useState(initValue);\r\n    const handler = useCallback((e) => {\r\n        setter(e.target.value);\r\n    }, []);\r\n    return [value, handler];\r\n}\r\n\r\nconst Signup = () => {\r\n    const dispatch = useDispatch();\r\n    const { isSigningUp, me } = useSelector(state => state.user);\r\n\r\n    const [id, onChangeId] = useInput('');\r\n    const [nick, onChangeNick] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [term, setTerm] = useState(false);\r\n    const [passwordError, setPasswordError] = useState('');;\r\n    const [termError, setTermError] = useState(false);;\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if(password !== passwordCheck){\r\n            return setPasswordError(true);\r\n        }\r\n        if(!term){\r\n            return setTermError(true);\r\n        }\r\n        dispatch({\r\n            type: SIGN_UP_REQUEST,\r\n            data: {\r\n              id,\r\n              password,\r\n              nick,\r\n            },\r\n        });\r\n    }, [password, passwordCheck, term]);\r\n\r\n    const onChangePasswordCheck = useCallback((e) => {\r\n        setPasswordError(e.target.value !== password);\r\n        setPasswordCheck(e.target.value);\r\n    }, [password]);\r\n\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTermError(false);\r\n        setTerm(e.target.checked);\r\n    }, []);\r\n\r\n    return <>\r\n        <Form onSubmit={onSubmit} style={{ padding: 10 }}>\r\n            <div>\r\n                <label htmlFor=\"user-id\">아이디</label>\r\n                <br/>\r\n                <Input name=\"user-id\" value={id} required onChange={onChangeId} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-nick\">닉네임</label>\r\n                <br/>\r\n                <Input name=\"user-nick\" value={nick} required onChange={onChangeNick} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password\">비밀번호</label>\r\n                <br/>\r\n                <Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassword} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password-check\">비밀번호확인</label>\r\n                <br/>\r\n                <Input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={onChangePasswordCheck} />\r\n                {passwordError && <div style={{ color: 'red' }}>비밀번호가 일치하지 않습니다.</div>}\r\n            </div>\r\n            <div>\r\n                <Checkbox name = \"user-term\" value={term} onChange={onChangeTerm}>내 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n                {termError && <div style={{ color: 'red' }}>약관에 동의하셔야 합니다.</div>}\r\n            </div>\r\n            <div style = {{ marginTop: 10 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\"> 가입하기 </Button>\r\n            </div>\r\n        </Form>\r\n    </>\r\n};\r\n\r\nexport default Signup;","export const initialState = {\r\n    isLoggedIn: false,      // 로그인 여부\r\n    isLoggingOut: false,    // 로그아웃 시도중\r\n    isLoggingIn: false,     // 로그인 시도중\r\n    logInErrorReason: '',   // 로그인 실패 사유\r\n    isSignedUp: false,      // 회원가입 성공\r\n    isSigningUp: false,     // 회원가입 시도중\r\n    signUpErrorReason: '',  // 회원가입 실패 사유\r\n    me: null,               // 내 정보\r\n    followingList: [],      // 팔로잉 리스트\r\n    followerList: [],       // 팔로워 리스트\r\n    userInfo: null,         // 남의 정보\r\n};\r\n\r\nconst dummyUser = {\r\n    nickname: '표서쿤',\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [],\r\n    id: 1,\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'LOG_OUT_FAILURE';\r\n// 로그인 했을 때 유저의 역할을 load 하기 위함\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n// 팔로워, 팔로잉 불러오기\r\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\r\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\r\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\r\n// 유저를 팔로윙하는 역할\r\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\r\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\r\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\r\n// 유저를 언팔로잉 하는 역할\r\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\r\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\r\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\r\n// 내 팔로워 이상한 사람 없애는 액션\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n// 리듀서의 단점때문에 만들어낸 액션이라고 합니다..\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\n\r\n// 본 강의에서 action을 만들기 힘들다면 그냥 코드에 바로 action type을 넣기로 함.\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case LOG_IN_REQUEST: {\r\n            return{\r\n                ...state,\r\n                isLoggedIn: true,\r\n                logInErrorReason: '',\r\n            }\r\n        }\r\n        case LOG_IN_SUCCESS: {\r\n            return{\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isLoggedIn: true,\r\n                isLoading: false,\r\n                me: dummyUser,\r\n            }\r\n        }\r\n        case LOG_IN_FAILURE: {\r\n            return {\r\n              ...state,\r\n              isLoggingIn: false,\r\n              isLoggedIn: false,\r\n              logInErrorReason: action.error,\r\n              me: null,\r\n            };\r\n          }\r\n        case LOG_OUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null,\r\n            }\r\n        }\r\n        case SIGN_UP_REQUEST: {\r\n            return {\r\n                ...state,\r\n                signUpData: action.data,\r\n            }\r\n        }\r\n        case SIGN_UP_SUCCESS: {\r\n            return {\r\n              ...state,\r\n              isSigningUp: false,\r\n              isSignedUp: true,\r\n            };\r\n          }\r\n          case SIGN_UP_FAILURE: {\r\n            return {\r\n              ...state,\r\n              isSigningUp: false,\r\n              signUpErrorReason: action.error,\r\n            };\r\n          }\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAEA;AAAA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAQA;AACA;AAVA;AAAA;AAAA;AACA;AASA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvFA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAGA;AAzDA;AA2DA;AACA;AACA;;;;A","sourceRoot":""}